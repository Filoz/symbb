{% trans_default_domain "symbb_frontend" %}

{% macro showPostList(object) %}

    {% for post in object.getPosts() %}
        <div class="row symbb_header_bg {% if loop.first %} header {% else %} subheader {% endif %}">
            <div class="col-md-12">{{post.getName()}}
                <div class="f-right">
                    <div class="btn-group btn-group-xs">
                        <button type="button" class="btn btn-default">{% trans %}Answer{% endtrans %}</button>
                        <button type="button" class="btn btn-default">{% trans %}Quote{% endtrans %}</button>
                        <button type="button" class="btn btn-default btn-primary">{% trans %}Edit{% endtrans %}</button>
                        <button type="button" class="btn btn-default btn-danger">{% trans %}Delete{% endtrans %}</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="row body">
            <div class="col-md-3 userblock">
                {{ executeSymbbEvent('before.avatar', post) }}
                <div class="avatar">
                    <img src="{{getSymbbUserAvatar(post.getAuthor())}}" />
                </div>
                {{ executeSymbbEvent('after.avatar', post) }}
                {{ executeSymbbEvent('before.username', post) }}
                {{post.getAuthor().getUsername()}}
                {{ executeSymbbEvent('after.username', post) }}
            </div>
            <div class="col-md-9 textblock">
                <div class="date">
                    {% trans with {'%user%': object.getLastPost().getAuthor().getUsername(), '%date%': object.getLastPost().getChanged()|format_date, '%time%': object.getLastPost().getChanged()|date('H:i')} %}%user% wrote on %date% at %time%{% endtrans %}
                </div>
                {{ executeSymbbEvent('before.text', post) }}
                <div class="text">
                {{post.getText()|bbcode_filter('default')}}
                </div>
                {{ executeSymbbEvent('after.text', post) }}
                {{ executeSymbbEvent('before.signature', post) }}
                {{ _self.showSignature(post) }}
                {{ executeSymbbEvent('after.signature', post) }}
            </div>
        </div>
    {% endfor %}

{% endmacro %}

{% macro showSignature(object) %}
{% if getSymbbUserData(object.getAuthor()).hasSignature() %}
    <div class="row signature">
        {{getSymbbUserSignature(object.getAuthor())|bbcode_filter('signature')}}
    </div>
{% endif %}
{% endmacro %}